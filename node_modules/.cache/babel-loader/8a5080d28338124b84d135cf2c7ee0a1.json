{"ast":null,"code":"var _jsxFileName = \"/var/www/html/PWA-tutorial-training/learn-chinese/src/AllVocab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AllVocab() {\n  _s();\n\n  const url = 'http://localhost/PWA-tutorial-training/learn-chinese/backend/index.php?lesson=flash';\n  const [allVocab, setAllVocab] = useState(null);\n  useEffect(() => {\n    axios.get(url).then(response => {\n      setAllVocab(response.data);\n    });\n  }, [url]);\n  const [isShow, setIsShow] = React.useState(false);\n\n  const handleClick = vid => {\n    setIsShow(!isShow);\n    currentID = vid;\n  };\n\n  if (allVocab) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/home/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"App-header\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), allVocab.map(vocab => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"LessonContent\",\n          onClick: handleClick(vocab.vid),\n          children: [vocab.chinese, isShow && vocab.vid == currentID ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Pinyin: \", vocab.pinyin, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), \"English: \", vocab.english]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 58\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, vocab.vid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No value\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AllVocab, \"mSNvGADz9rOVKkgGlAWWzZBzx2M=\");\n\n_c = AllVocab;\nexport default AllVocab;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllVocab\");","map":{"version":3,"sources":["/var/www/html/PWA-tutorial-training/learn-chinese/src/AllVocab.js"],"names":["React","useState","useEffect","axios","Link","AllVocab","url","allVocab","setAllVocab","get","then","response","data","isShow","setIsShow","handleClick","vid","currentID","map","vocab","chinese","pinyin","english"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,SAASC,QAAT,GAAmB;AAAA;;AACf,QAAMC,GAAG,GAAG,qFAAZ;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACM,GAAN,CAAUH,GAAV,EAAeI,IAAf,CAAoBC,QAAQ,IAAG;AAC3BH,MAAAA,WAAW,CAACG,QAAQ,CAACC,IAAV,CAAX;AACH,KAFD;AAGH,GAJQ,EAIN,CAACN,GAAD,CAJM,CAAT;AAMA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBd,KAAK,CAACC,QAAN,CAAe,KAAf,CAA5B;;AAEA,QAAMc,WAAW,GAAIC,GAAD,IAAS;AAC3BF,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAI,IAAAA,SAAS,GAAGD,GAAZ;AACD,GAHD;;AAKA,MAAGT,QAAH,EAAY;AACR,wBACI;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAKQA,QAAQ,CAACW,GAAT,CAAaC,KAAK,iBAClB;AAAA,+BACA;AAAQ,UAAA,SAAS,EAAC,eAAlB;AAAkC,UAAA,OAAO,EAAEJ,WAAW,CAACI,KAAK,CAACH,GAAP,CAAtD;AAAA,qBACCG,KAAK,CAACC,OADP,EAEEP,MAAM,IAAIM,KAAK,CAACH,GAAN,IAAaC,SAAvB,gBAAmC;AAAA,mCAChBE,KAAK,CAACE,MADU,eAE7B;AAAA;AAAA;AAAA;AAAA,oBAF6B,eAGnBF,KAAK,CAACG,OAHa;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAnC,GAIe,IANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,SAAUH,KAAK,CAACH,GAAhB;AAAA;AAAA;AAAA;AAAA,cADA,CALR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA7CQX,Q;;KAAAA,Q;AA+CT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport { Link } from 'react-router-dom'\n\nfunction AllVocab(){\n    const url = 'http://localhost/PWA-tutorial-training/learn-chinese/backend/index.php?lesson=flash';\n    const [allVocab, setAllVocab] = useState(null);\n    useEffect(() => {\n        axios.get(url).then(response =>{\n            setAllVocab(response.data)\n        });\n    }, [url]);\n\n    const [isShow, setIsShow] = React.useState(false);\n\n    const handleClick = (vid) => {\n      setIsShow(!isShow);\n      currentID = vid;\n    };\n    \n    if(allVocab){\n        return (\n            <div>\n                <Link to=\"/home/\">\n                    <button className=\"App-header\">Home</button>\n                </Link>\n                {\n                    allVocab.map(vocab => (\n                    <div key={vocab.vid}>\n                    <button className=\"LessonContent\" onClick={handleClick(vocab.vid)}>\n                    {vocab.chinese}\n                     {isShow && vocab.vid == currentID ? <div>\n                                Pinyin: {vocab.pinyin}\n                            <br></br>\n                            English: {vocab.english}\n                            </div> : null}\n                    </button>    \n        </div>\n    ))\n}\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            No value\n        </div>\n    )\n}\n\nexport default AllVocab"]},"metadata":{},"sourceType":"module"}